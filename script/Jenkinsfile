
pipeline{
    agent any
    tools{
       jdk "Openjdk17"
       maven "MAVEN3"
    }
    environment{
        SONARQUBE_SERVER = "sonarQube"
    }
    stages{
        // stage("Fetch source code"){
        //     steps{
        //         echo "========executing A========"
        //         git branch: 'main' , url:'https://github.com/geofLegrand/vprofile-project.git'
        //     }

        // }
                stage("Test the code"){
            steps{
                sh 'mvn test'
            }
        }
        stage("Build"){
            steps{
               sh 'mvn clean install '
            }
            post {
                success {
                    echo "New archiving !!!"
                    archiveArtifacts artifacts: 'target/*.war'
                }
                failure{
                    echo ""
                }
            }
            
        }
        stage('Checkstyle analysis'){
          steps{
            sh 'mvn checkstyle:checkstyle'
          }
        }
           stage('Sonar analysis') {
                  environment{
                        scannerHome = tool 'sonar6'
                    }
            steps {
                withSonarQubeEnv('sonarQube'){
              
                    
                        // def scannerHome = tool 'sonar6'
                        sh '''${scannerHome}/bin/sonar-scanner \
                            -Dsonar.projectKey=vprofile \
                            -Dsonar.projectName=vprofile \
                            -Dsonar.projectVersion=1.0 \
                            -Dsonar.sources=src/ \
                            -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/ \
                            -Dsonar.junit.reportsPath=target/surfire-reports/ \
                            -Dsonar.jacoco.reportsPath=target/jacoco.exec \
                            -Dsonar.java.checkstyle.reportsPaths=target/checkstyle-result.xml
                            '''
                    
                }
            }
            

        }


    }

}